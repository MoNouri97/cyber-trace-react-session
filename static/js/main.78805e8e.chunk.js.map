{"version":3,"sources":["components/AddTransaction.jsx","helpers/formatMoney.js","components/Balance.jsx","components/Header.jsx","components/History.jsx","components/IncomeExpense.jsx","App.js","index.js"],"names":["AddTransaction","onAdd","useState","text","setText","amount","setAmount","onSubmit","e","preventDefault","name","id","Math","random","className","htmlFor","type","value","onChange","target","placeholder","formatMoney","currency","formatter","Intl","NumberFormat","style","format","Balance","data","Header","History","onDelete","length","map","transaction","onClick","isIncome","IncomeExpenses","income","filter","reduce","acc","curr","expense","tr","storage_key","initial","savedString","localStorage","getItem","JSON","parse","App","balance","setBalance","transactions","setTransactions","useEffect","console","log","setItem","stringify","IncomeExpense","newTransaction","oldValue","filtered","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78805e8e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst AddTransaction = ({ onAdd }) => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    // api call -> id\n    onAdd({\n      name: text,\n      amount: +amount,\n      id: Math.random() * 1000,\n    });\n\n    setAmount('');\n    setText('');\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className='form-control'>\n          <label htmlFor='text'>Text</label>\n          <input\n            type='text'\n            value={text}\n            onChange={e => setText(e.target.value)}\n            placeholder='Enter text...'\n          />\n        </div>\n        <div className='form-control'>\n          <label htmlFor='amount'>\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type='number'\n            value={amount}\n            onChange={e => setAmount(e.target.value)}\n            placeholder='Enter amount...'\n          />\n        </div>\n        <button className='btn'>Add transaction</button>\n      </form>\n    </>\n  );\n};\n\nexport default AddTransaction;\n","const formatMoney = (amount, currency = 'USD') => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n  });\n\n  return formatter.format(amount);\n};\n\nexport default formatMoney;\n","import React from 'react';\nimport formatMoney from '../helpers/formatMoney';\n\n// {data} = props\n\nconst Balance = ({ data }) => {\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1>{formatMoney(data)}</h1>\n    </>\n  );\n};\n\nexport default Balance;\n","import React from 'react';\n\nconst Header = () => {\n  return (\n    <>\n      <h2>Cyber-Trace</h2>\n      <p>\n        A simple react app developed during a session for the club Cyber-Trace\n        ðŸ’Ÿ\n      </p>\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport formatMoney from '../helpers/formatMoney';\n\nconst History = ({ data, onDelete }) => {\n  return (\n    <>\n      <h3>History</h3>\n      <ul className='list'>\n        {/* conditional rendering */}\n        {/* { data.length === 0 && <p>no transactions</p> } */}\n\n        {data.length > 0 ? (\n          data.map(transaction => {\n            return (\n              <li\n                key={transaction.id}\n                className={transaction.amount < 0 ? 'minus' : 'plus'}\n              >\n                {transaction.name}\n                <span>{formatMoney(transaction.amount)}</span>\n                <button\n                  onClick={() => onDelete(transaction.id)}\n                  className='delete-btn'\n                >\n                  X\n                </button>\n              </li>\n            );\n          })\n        ) : (\n          <p>no transactions</p>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default History;\n","import React from 'react';\nimport formatMoney from '../helpers/formatMoney';\n\nconst isIncome = transaction => {\n  return transaction.amount > 0;\n};\n\nconst IncomeExpenses = ({ data = [] }) => {\n  const income = data.filter(isIncome).reduce((acc, curr) => {\n    return acc + curr.amount;\n  }, 0);\n  const expense = data\n    .filter(tr => !isIncome(tr))\n    .reduce((acc, curr) => {\n      return acc + curr.amount;\n    }, 0);\n\n  return (\n    <div className='inc-exp-container'>\n      <div>\n        <h4>Income</h4>\n        <p className='money plus'>{formatMoney(income)}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className='money minus'>{formatMoney(expense)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomeExpenses;\n","import React, { useEffect, useState } from 'react';\nimport AddTransaction from './components/AddTransaction';\nimport Balance from './components/Balance';\nimport Header from './components/Header';\nimport History from './components/History';\nimport IncomeExpenses from './components/IncomeExpense';\n\nconst storage_key = 'TRANSACTIONS';\n\nconst initial = () => {\n  const savedString = localStorage.getItem(storage_key);\n  return JSON.parse(savedString);\n};\n\nconst App = () => {\n  const [balance, setBalance] = useState(10000);\n  const [transactions, setTransactions] = useState(initial);\n  const addTransaction = newTransaction => {\n    setTransactions(oldValue => {\n      return [...oldValue, newTransaction];\n    });\n  };\n\n  const deleteTransaction = id => {\n    const filtered = transactions.filter(transaction => transaction.id !== id);\n\n    setTransactions(filtered);\n  };\n\n  // on every render\n  useEffect(() => {\n    console.log('hello world !!!');\n  });\n\n  useEffect(() => {\n    setBalance(\n      transactions.reduce((acc, { amount }) => {\n        return acc + amount;\n      }, 0),\n    );\n\n    localStorage.setItem(storage_key, JSON.stringify(transactions));\n  }, [transactions]);\n\n  return (\n    <>\n      <Header />\n      <div className='container'>\n        <Balance data={balance} />\n        <IncomeExpenses data={transactions} />\n        <AddTransaction onAdd={addTransaction} />\n        <History data={transactions} onDelete={deleteTransaction} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Todos from './Todos';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<Todos />, document.getElementById('root'));\n"],"sourceRoot":""}